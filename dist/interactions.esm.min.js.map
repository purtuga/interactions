{"version":3,"sources":["webpack://__LIB/webpack/bootstrap","webpack://__LIB/external \"(window.WeakMap.WeakMap = window.WeakMap)\"","webpack://__LIB/./node_modules/@purtuga/common/src/jsutils/runtime-aliases.js","webpack://__LIB/./node_modules/@purtuga/common/src/jsutils/objectExtend.js","webpack://__LIB/./node_modules/@purtuga/common/src/jsutils/dataStore.js","webpack://__LIB/./node_modules/@purtuga/common/src/jsutils/Ev.js","webpack://__LIB/./node_modules/@purtuga/common/src/jsutils/Ev-decorator.js","webpack://__LIB/./node_modules/@purtuga/common/src/domutils/domAddEventListener.js","webpack://__LIB/./node_modules/@purtuga/common/src/jsutils/BaseClass.js","webpack://__LIB/./src/Resizable/Resizable.js","webpack://__LIB/./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","window","WeakMap","functionBindCall","Function","functionBind","toString","isObject","obj","arr","defineProperties","keys","consoleLog","Array","isArray","forEach","indexOf","splice","slice","console","log","consoleError","error","HTMLElementPrototype","warn","iterator","HTMLElement","doc","document","head","appendChild","insertBefore","hasAttribute","getAttribute","setAttribute","removeAttribute","objectExtend","mergeIntoObj","mergeObjects","response","total","length","deepMerge","shift","dataStore","stash","LISTENER_STORAGE","Ev","on","evName","callback","getStoreFor","this","add","delete","emit","data","clear","inst","Map","has","set","Set","MEMBERS","domAddEventListener","ele","event","capture","events","split","evListeners","addEventListener","remove","removeEventListener","listeners","PRIVATE","EV_RESIZE","EV_START","EV_END","HANDLE_OPTIONS","IS_NORTH_SOUTH_MOVEMENT","IS_EAST_WEST_MOVEMENT","IS_TOUCH","RETURN_FALSE","handleTemplate","tagName","createElement","innerHTML","Resizable","classDescriptor","memberName","elements","push","kind","placement","descriptor","getOwnPropertyDescriptor","_BaseClass","constructor","options","super","_initialize","opt","defaults","ondragstart","handleEle","handle","handleType","importNode","content","firstChild","handleClassPrefix","substr","querySelector","movement","boxWidth","boxHeight","handleX","handleY","domEvents","resizableEle","minWidth","minHeight","resizeWhenMouseMoves","mouseEvent","newWidth","getEventPointerPosition","newHeight","fireEvent","style","width","height","stopPropagation","preventDefault","stopResizing","mousemove","mouseup","mousedown","clientWidth","clientHeight","test","init","arguments","onDestroy","destroy","callbackList","e","type","targetTouches","item","toUpperCase","nHandle","neHandle","eHandle","seHandle","sHandle","swHandle","wHandle","nwHandle","__webpack_exports__","VERSION","Resizable_Resizable","BUILD"],"mappings":"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","file":"interactions.esm.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = (window.WeakMap.WeakMap = window.WeakMap);","/**\r\n * return a value to a given method\r\n *\r\n * @function\r\n * @param {Function} fn\r\n * @param {*} ctx The context to be assigned to `fn`\r\n * @return {Function}\r\n *\r\n * @example\r\n *\r\n * f = functionBin(function() { console.log(`Hello ${this.name}`); }, { name: \"Jackson\" });\r\n * f(); // => \"Hello Jackson\"\r\n */\r\nexport const functionBind = Function.bind.call.bind(Function.bind);\r\n\r\n/**\r\n * return a bound `.call` to the given method.\r\n *\r\n * @type function\r\n * @param {Function} fn\r\n * @return {Function}\r\n * @example\r\n *\r\n * forEach = functionBindCall(Array.prototype.forEach);\r\n * // same as doing: Array.prototype.forEach.call (but returns a new \"call\" method);\r\n */\r\nexport const functionBindCall = functionBind(Function.call.bind, Function.call);\r\n\r\n// Object ===============================================================================\r\nexport const toString                 = functionBindCall(Object.prototype.toString);\r\nexport const isObject                 = obj => toString(obj) === \"[object Object]\";\r\nexport const isString                 = obj => toString(obj) === \"[object String]\";\r\nexport const isFunction               = obj => toString(obj) === \"[object Function]\";\r\nexport const objectDefineProperty     = Object.defineProperty;\r\nexport const objectDefineProperties   = Object.defineProperties;\r\nexport const objectKeys               = Object.keys;\r\nexport const defineProperty = (obj, prop, value, getter, setter, configurable = true, enumerable = false, writable = true) => {\r\n    const descriptor = {\r\n        configurable,\r\n        enumerable\r\n    };\r\n\r\n    if (getter || setter) {\r\n        descriptor.get = getter;\r\n        descriptor.set = setter;\r\n    } else {\r\n        descriptor.writable = writable;\r\n        descriptor.value = value;\r\n    }\r\n\r\n    objectDefineProperty(obj, prop, descriptor);\r\n\r\n    return obj;\r\n};\r\n\r\n\r\n// Array ===============================================================================\r\nconst arr = [];\r\nexport const isArray        = Array.isArray;\r\nexport const arrayForEach   = functionBindCall(arr.forEach);\r\nexport const arrayIndexOf   = functionBindCall(arr.indexOf);\r\nexport const arraySplice    = functionBindCall(arr.splice);\r\nexport const arraySlice    = functionBindCall(arr.slice);\r\n\r\n\r\n// Logging ===============================================================================\r\nexport const consoleLog = console.log; // eslint-disable-line\r\nexport const consoleError = console.error || consoleLog; // eslint-disable-line\r\nexport const consoleWarn = console.warn || consoleLog; // eslint-disable-line\r\n\r\n\r\n// Iterators ===============================================================================\r\nexport const SymbolIterator = \"undefined\" !== typeof Symbol && Symbol.iterator ? Symbol.iterator : \"@@iterator\";\r\n\r\n\r\n// DOM ===============================================================================\r\nconst HTMLElementPrototype = HTMLElement.prototype;\r\nexport const doc = document;\r\nexport const head = doc.head;\r\nexport const createDocFragment = () => doc.createDocumentFragment();\r\nexport const createElement = tagName => doc.createElement(tagName);\r\nexport const createTextNode = data => doc.createTextNode(data || \"\");\r\nexport const appendChild = functionBindCall(HTMLElementPrototype.appendChild);\r\nexport const insertBefore = functionBindCall(HTMLElementPrototype.insertBefore);\r\nexport const hasAttribute = functionBindCall(HTMLElementPrototype.hasAttribute);\r\nexport const getAttribute = functionBindCall(HTMLElementPrototype.getAttribute);\r\nexport const setAttribute = functionBindCall(HTMLElementPrototype.setAttribute);\r\nexport const removeAttribute = functionBindCall(HTMLElementPrototype.removeAttribute);","import {isObject} from \"./runtime-aliases.js\";\r\n\r\n//============================================================\r\n\r\n/**\r\n * Extends an object with the properties of another.\r\n *\r\n * @param {Object|Boolean} mergeIntoObj\r\n *  The object that will have the properties of every other object provided\r\n *  on input merged into. This can also be a `Boolean`, in which case,\r\n *  a deep merge of objects will be done - argument number 2 will\r\n *  become the `mergeIntoObj`.\r\n * @param {...Object} mergeObjects\r\n *\r\n * @return {Object}\r\n */\r\nexport function objectExtend(mergeIntoObj, ...mergeObjects) {\r\n    let response    = mergeIntoObj || {};\r\n    let total       = mergeObjects.length;\r\n    let deepMerge   = false;\r\n    let i;\r\n    let key;\r\n\r\n    if (typeof mergeIntoObj === \"boolean\") {\r\n        deepMerge   = mergeIntoObj;\r\n        response    = mergeObjects.shift() || {};\r\n        total       = mergeObjects.length;\r\n    }\r\n\r\n    for (i = 0; i < total; i++) {\r\n        if (!mergeObjects[i]) {\r\n            continue;\r\n        }\r\n\r\n        for (key in mergeObjects[i]) {\r\n            if (mergeObjects[i].hasOwnProperty(key)) {\r\n                if (\r\n                    deepMerge &&\r\n                    isObject(response[key]) &&\r\n                    isObject(mergeObjects[i][key])\r\n                ) {\r\n                    response[key] = objectExtend( true, response[key], mergeObjects[i][key]);\r\n\r\n                } else {\r\n                    response[key] = mergeObjects[i][key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return response;\r\n}\r\nexport default objectExtend;","import {WeakMap} from \"./WeakMap\";\r\n\r\n/**\r\n * Returns an object that contains an initialized WeakMap (`stash` property)\r\n * where data can be stored.\r\n *\r\n * @namespace dataStore\r\n *\r\n */\r\nvar dataStore = /** @lends dataStore */{\r\n    /**\r\n     * Stash data here.\r\n     * @type WeakMap\r\n     */\r\n    stash:  new WeakMap(),\r\n    /**\r\n     * Create a private data store and return it.\r\n     * @return {WeakMap}\r\n     */\r\n    create: function(){\r\n        return new WeakMap();\r\n    }\r\n};\r\n\r\nexport default dataStore;\r\nexport { dataStore };\r\n","const LISTENER_STORAGE = Symbol(\"state\");\r\n\r\n/**\r\n * Supper tiny minimalist EventEmitter\r\n * @implements MinimalEventEmitter\r\n */\r\nexport class Ev {\r\n    on(evName, callback) {\r\n        getStoreFor(this, evName).add(callback);\r\n        /**\r\n         * @typedef {Function} EvOff\r\n         */\r\n        return () => getStoreFor(this, evName).delete(callback);\r\n    }\r\n\r\n    emit(evName, data) {\r\n        getStoreFor(this, evName).forEach(callback => callback(data));\r\n    }\r\n\r\n    clear() {\r\n        getStoreFor(this).clear();\r\n    }\r\n}\r\n\r\n/**\r\n * @private\r\n * @return {Map|Set}\r\n *  If called with no `evName`, then the entire store is returned (a `Map`)\r\n */\r\nfunction getStoreFor(inst, evName) {\r\n    if (!inst[LISTENER_STORAGE]) {\r\n        inst[LISTENER_STORAGE] = new Map();\r\n    }\r\n    if (!evName) {\r\n        return inst[LISTENER_STORAGE];\r\n    }\r\n    if (!inst[LISTENER_STORAGE].has(evName)) {\r\n        inst[LISTENER_STORAGE].set(evName, new Set());\r\n    }\r\n    return inst[LISTENER_STORAGE].get(evName);\r\n}\r\n\r\n\r\n/**\r\n * Minimal EventEmitter interface provinding only the basics\r\n *\r\n * @interface MinimalEventEmitter\r\n */\r\n\r\n/**\r\n * Set an event listener\r\n * @function\r\n * @name MinimalEventEmitter#on\r\n * @param {String} evName\r\n * @param {Function} callback\r\n * @returns {EvOff}\r\n */\r\n\r\n/**\r\n * Emit an event\r\n *\r\n * @function\r\n * @name MinimalEventEmitter#emit\r\n * @param {String} evName\r\n * @param {*} data\r\n */\r\n\r\n/**\r\n * Clear the all the event listeners\r\n * @function\r\n * @name MinimalEventEmitter#clear\r\n */","import  {Ev} from \"./Ev.js\";\r\n\r\n//========================================================================\r\nconst MEMBERS = [\"on\", \"emit\", \"clear\"];\r\n\r\n/**\r\n * Add basic Eventful methods ([MinimalEventEmitter]{@link MinimalEventEmitter}) to the given class.\r\n *\r\n * @returns {function(*): *}\r\n */\r\nexport function eventful() {\r\n    return function (classDescriptor) {\r\n        MEMBERS.forEach(memberName => {\r\n            classDescriptor.elements.push({\r\n                key: memberName,\r\n                kind: \"method\",\r\n                placement: \"prototype\",\r\n                descriptor: Object.getOwnPropertyDescriptor(Ev.prototype, memberName)\r\n            });\r\n        });\r\n        return classDescriptor;\r\n    }\r\n}\r\n","/**\r\n * Adds an event handler to a DOM element and returns back an\r\n * object that allows for removal of the event.\r\n *\r\n * @function domAddEventListener\r\n *\r\n * @param {HTMLElement} ele\r\n * @param {String} event\r\n *  The event to listen to (ex. `click`). Multiple events can be defined\r\n *  by separating them with whitespace\r\n * @param {Function} callback\r\n * @param {Boolean} [capture]\r\n *\r\n * @return DOMEventListener\r\n *\r\n * @example\r\n *\r\n * var listener = domAddEventHandler(myEle, \"click\", function(){});\r\n * ...\r\n * listener.remove();\r\n */\r\nexport function domAddEventListener(ele, event, callback, capture) {\r\n    let events      = event.split(/\\s+/);\r\n    let evListeners = {};\r\n\r\n    events.forEach(evName => {\r\n        ele.addEventListener(evName, callback, capture);\r\n        evListeners[evName] = {\r\n            remove: () => ele.removeEventListener(evName, callback, capture)\r\n        }\r\n    });\r\n\r\n    /**\r\n     * A DOM Event listener.\r\n     *\r\n     * @typedef {Object} DOMEventListener\r\n     *\r\n     * @property {Function} remove\r\n     * @property {Object} listeners\r\n     *  List of listeners that were bound to the DOM element. Each listeners has a\r\n     *  corresponding `.remove()` method.\r\n     */\r\n    return Object.create({\r\n        listeners: evListeners,\r\n        remove: function () {\r\n            events.forEach(evName => evListeners[evName].remove());\r\n        }\r\n    });\r\n}\r\nexport default domAddEventListener;\r\n","import {consoleError} from \"./runtime-aliases.js\";\r\n\r\n//======================================================================\r\nconst PRIVATE = new WeakMap();\r\n\r\n/**\r\n * A base class\r\n */\r\nexport class BaseClass {\r\n    constructor(){\r\n        if (this.init) { // for backwards compatibility\r\n            this.init(...arguments);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add a callback to be executed when `.destroy()` is executed\r\n     *\r\n     * @param {FUnction} callback\r\n     */\r\n    onDestroy(callback) {\r\n        if (!PRIVATE.has(this)) {\r\n            PRIVATE.set(this, new Set());\r\n        }\r\n        PRIVATE.get(this).add(callback);\r\n    }\r\n\r\n    /**\r\n     * Run destroy logic, which by default is to run all callbacks stored via `.onDestroy()`\r\n     */\r\n    destroy() {\r\n        const callbackList = PRIVATE.get(this);\r\n        if (callbackList) {\r\n            callbackList.forEach(callback => {\r\n                try {\r\n                    callback();\r\n                } catch (e) {\r\n                    consoleError(e);\r\n                }\r\n            });\r\n            callbackList.clear();\r\n        }\r\n    }\r\n}","import {objectExtend} from \"@purtuga/common/src/jsutils/objectExtend.js\"\r\nimport {dataStore} from \"@purtuga/common/src/jsutils/dataStore.js\"\r\nimport {eventful} from \"@purtuga/common/src/jsutils/Ev-decorator.js\"\r\nimport {domAddEventListener} from \"@purtuga/common/src/domutils/domAddEventListener.js\"\r\nimport {BaseClass} from \"@purtuga/common/src/jsutils/BaseClass.js\"\r\nimport {\r\n    createElement,\r\n    doc\r\n} from \"@purtuga/common/src/jsutils/runtime-aliases.js\";\r\n//========================================================================\r\nconst PRIVATE = dataStore.create();\r\nconst EV_RESIZE = \"resize\";\r\nconst EV_START = `${EV_RESIZE}-start`;\r\nconst EV_END = `${EV_RESIZE}-end`;\r\nconst HANDLE_OPTIONS = [\r\n    \"nHandle\",\r\n    \"neHandle\",\r\n    \"eHandle\",\r\n    \"seHandle\",\r\n    \"sHandle\",\r\n    \"swHandle\",\r\n    \"wHandle\",\r\n    \"nwHandle\"\r\n];\r\nconst IS_NORTH_SOUTH_MOVEMENT = /^[ns]H/;\r\nconst IS_EAST_WEST_MOVEMENT = /^[ew]H/;\r\nconst IS_TOUCH = /^touch/;\r\nconst RETURN_FALSE = () => false;\r\nconst handleTemplate = createElement(\"template\");\r\n\r\nhandleTemplate.innerHTML = `<div handle></div>`;\r\n\r\n/**\r\n * Utility to make a given DOM element resizable by dragging its edges.\r\n *\r\n * @class Resizable\r\n * @extends BaseClass\r\n * @implements MinimalEventEmitter\r\n *\r\n * @param {Object} options\r\n *\r\n * @param {HTMLElement} options.ele\r\n *\r\n * @param {HTMLElement} [options.minWidth=50]\r\n *\r\n * @param {HTMLElement} [options.minHeight=50]\r\n *\r\n * @param {String} [options.handleClassPrefix=\"handle\"]\r\n *  The CSS Prefix for the handles. Used only on handles whose configuration (see below) is `true`;\r\n *\r\n * @param {Boolean|String|HTMLElement} [options.nHandle=false]\r\n *  The top (n = North) drag handle. The following option values applies to all handles:\r\n *  -   `Boolean`: indicating if handle should be used or not. In such case,\r\n *      this utility will insert its own markup to represent the handle.\r\n *      Note that this option will require that Styles be added to the page in order\r\n *      to ensure the handles are styles correctly.\r\n *  -   `String`: a selector identifing the drag handle (selector is applied\r\n *       to `options.ele`)\r\n *  -   `HTMLElement`: An HTML element\r\n * @param {Boolean|String|HTMLElement} [options.neHandle=false]\r\n * @param {Boolean|String|HTMLElement} [options.eHandle=true]\r\n * @param {Boolean|String|HTMLElement} [options.seHandle=true]\r\n * @param {Boolean|String|HTMLElement} [options.sHandle=true]\r\n * @param {Boolean|String|HTMLElement} [options.swHandle=false]\r\n * @param {Boolean|String|HTMLElement} [options.wHandle=false]\r\n * @param {Boolean|String|HTMLElement} [options.nwHandle=false]\r\n *\r\n * @fires Resizable#resize-start\r\n * @fires Resizable#resize-end\r\n * @fires Resizable#resize\r\n */\r\n@eventful()\r\nclass Resizable extends BaseClass {\r\n    constructor(options) {\r\n        super();\r\n\r\n        let inst = {\r\n            opt: objectExtend({}, this.constructor.defaults, options)\r\n        };\r\n\r\n        PRIVATE.set(this, inst);\r\n        inst.opt.ele.ondragstart = RETURN_FALSE;\r\n        this.emit = this.emit.bind(this);\r\n        setupHandles.call(this);\r\n    }\r\n\r\n    setHandle() {} // FIXME: implement\r\n}\r\n\r\nfunction setupHandles() {\r\n    let inst = PRIVATE.get(this);\r\n    let opt = inst.opt;\r\n    let handleEle;\r\n\r\n    HANDLE_OPTIONS.forEach(handle => {\r\n        handleEle = null;\r\n        const handleType = typeof opt[handle];\r\n\r\n        if (!opt[handle]) {\r\n            return;\r\n        } else if (\"boolean\" === handleType) {\r\n            handleEle = document.importNode(handleTemplate.content, true).firstChild;\r\n            handleEle.setAttribute(\"class\", `${opt.handleClassPrefix} ${opt.handleClassPrefix}-${handle.substr(0, handle.indexOf(\"H\"))}`);\r\n            opt.ele.appendChild(handleEle);\r\n\r\n        } else if (\"string\" === handleType) {\r\n            handleEle = opt.ele.querySelector(opt[handle]);\r\n            if (!handleEle) {\r\n                return;\r\n            }\r\n        } else if (!opt[handle].addEventListener) {\r\n            return;\r\n        } else {\r\n            handleEle = opt[handle];\r\n        }\r\n\r\n        inst[handle] = addEventHandlingToHandle.call(this, {\r\n            handle: handleEle,\r\n            movement: IS_EAST_WEST_MOVEMENT.test(handle)\r\n                ? \"ew\"\r\n                : IS_NORTH_SOUTH_MOVEMENT.test(handle)\r\n                    ? \"ns\"\r\n                    : \"all\"\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Adds event handling to a give handle.\r\n *\r\n * @param {Object} options\r\n * @param {HTMLElement} options.handle\r\n * @param {Object} [options.movement=\"all\"]\r\n *  The type of movement the handle allows. Valid values are:\r\n *\r\n *  -   `all`: All directions (north-south/east-west)\r\n *  -   `ns`: vertically only (north south)\r\n *  -   `ew`: Horizontally only (east west)\r\n *\r\n * @return {Object}\r\n *  An object containing a `.remove()` method that can be used to\r\n *  destruct all event handlers\r\n */\r\nfunction addEventHandlingToHandle({ handle, movement = \"all\" }) {\r\n    let inst = PRIVATE.get(this);\r\n    let domEvents = {};\r\n    let emit = this.emit;\r\n    let { ele: resizableEle, minWidth, minHeight } = inst.opt;\r\n    let boxWidth;\r\n    let boxHeight;\r\n    let handleX;\r\n    let handleY;\r\n\r\n    let resizeWhenMouseMoves = mouseEvent => {\r\n        let newWidth = boxWidth + (getEventPointerPosition(mouseEvent, \"x\") - handleX);\r\n        let newHeight = boxHeight + (getEventPointerPosition(mouseEvent, \"y\") - handleY);\r\n        let fireEvent = false;\r\n\r\n        if (newWidth >= minWidth && (movement === \"all\" || movement === \"ew\")) {\r\n            resizableEle.style.width = newWidth + \"px\";\r\n            fireEvent = true;\r\n        }\r\n\r\n        if (newHeight >= minHeight && (movement === \"all\" || movement === \"ns\")) {\r\n            resizableEle.style.height = newHeight + \"px\";\r\n            fireEvent = true;\r\n        }\r\n\r\n        if (fireEvent) {\r\n            /**\r\n             * Element was resized\r\n             *\r\n             * @event Resizable#resize\r\n             */\r\n            emit(EV_RESIZE);\r\n        }\r\n\r\n        mouseEvent.stopPropagation();\r\n        mouseEvent.preventDefault();\r\n        return false;\r\n    };\r\n    let stopResizing = (/*ev*/) => {\r\n        let fireEvent = false;\r\n\r\n        if (domEvents.mousemove) {\r\n            domEvents.mousemove.remove();\r\n            domEvents.mousemove = null;\r\n            fireEvent = true;\r\n        }\r\n\r\n        if (domEvents.mouseup) {\r\n            domEvents.mouseup.remove();\r\n            domEvents.mouseup = null;\r\n            fireEvent = true;\r\n        }\r\n\r\n        if (fireEvent) {\r\n            /**\r\n             * Resizing of element has ended (user released the mouse (mouseup).\r\n             *\r\n             * @event Resizable#resize-end\r\n             */\r\n            emit(EV_END);\r\n        }\r\n    };\r\n\r\n    domEvents.mousedown = domAddEventListener(\r\n        handle,\r\n        \"mousedown touchstart\",\r\n        handleEle => {\r\n            // FIXME: check if mouse is still down. Edge case: user tabs between windows while mosue is down.\r\n\r\n            boxWidth = resizableEle.clientWidth;\r\n            boxHeight = resizableEle.clientHeight;\r\n            handleX = getEventPointerPosition(handleEle, \"x\"); // handleEle.clientX;\r\n            handleY = getEventPointerPosition(handleEle, \"y\"); //handleEle.clientY;\r\n\r\n            domEvents.mouseup = domAddEventListener(\r\n                doc,\r\n                \"mouseup touchend\",\r\n                stopResizing,\r\n                false\r\n            );\r\n\r\n            domEvents.mousemove = domAddEventListener(\r\n                doc,\r\n                \"mousemove touchmove\",\r\n                resizeWhenMouseMoves,\r\n                false\r\n            );\r\n\r\n            /**\r\n             * Resizing of element is about to start (user moused down on handle)\r\n             *\r\n             * @event Resizable#resize-start\r\n             */\r\n            emit(EV_START);\r\n        },\r\n        false\r\n    );\r\n\r\n    return Object.create({\r\n        remove() {\r\n            Object.keys(domEvents).forEach(evName => {\r\n                if (domEvents[evName]) {\r\n                    domEvents[evName].remove();\r\n                    domEvents[evName] = null;\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nfunction getEventPointerPosition(event, type) {\r\n    const coordinates =\r\n        IS_TOUCH.test(event.type) && event.targetTouches\r\n            ? event.targetTouches.item(0)\r\n            : event;\r\n    return coordinates[`client${type.toUpperCase()}`];\r\n}\r\n\r\nResizable.defaults = {\r\n    ele: null,\r\n    minWidth: 50,\r\n    minHeight: 50,\r\n    handleClassPrefix: \"handle\",\r\n    // FIXME: support `maxWidth` of px + keyword like `parent` or maybe juust a % (implies parent)\r\n    // FIXME: support `maxHeight` of px + keyword like `parent` or maybe just a % (which would imply parent)\r\n    // drag handles\r\n    nHandle: false,\r\n    neHandle: false,\r\n    eHandle: true,\r\n    seHandle: true,\r\n    sHandle: true,\r\n    swHandle: false,\r\n    wHandle: false,\r\n    nwHandle: false\r\n};\r\n\r\nexport { Resizable };\r\nexport default Resizable;\r\n","export * from \"./Resizable/Resizable.js\"\r\n\r\nexport const VERSION = BUILD.DATA.VERSION; // eslint-disable-line\r\n"],"sourceRoot":""}